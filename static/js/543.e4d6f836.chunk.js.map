{"version":3,"file":"static/js/543.e4d6f836.chunk.js","mappings":"8LAGe,SAASA,EAAT,GAAqD,IAAjCC,EAAgC,EAAhCA,SAAgC,IAAtBC,YAAAA,OAAsB,SAE3DC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UAuBvB,OACE,kBAAMH,SAtBW,SAAAM,GAGnB,GAFAA,EAAEC,iBAECN,EAAa,CACd,IAAMO,EAAW,CACfC,MAAOL,EAAcM,QAAQC,MAC7BC,SAAUP,EAAiBK,QAAQC,OAErCX,EAASQ,EACV,KAAM,CACL,IAAMA,EAAW,CACfK,KAAMX,EAAaQ,QAAQC,MAC3BF,MAAOL,EAAcM,QAAQC,MAC7BC,SAAUP,EAAiBK,QAAQC,OAErCX,EAASQ,EACV,CAEDF,EAAEQ,OAAOC,OACV,EAGG,WACE,wBAAKd,EAAc,UAAY,YAC9BA,EAAc,MACd,8BACC,oCACE,kBACEe,KAAK,OACLH,KAAK,OACLI,YAAa,kBACbC,IAAKhB,EACLiB,UAAQ,QAGd,8BACE,sCACE,kBACEH,KAAK,QACLH,KAAK,QACLI,YAAa,oBACbC,IAAKd,EACLe,UAAQ,QAGd,8BACE,wCACE,kBACEH,KAAK,WACLH,KAAK,WACLO,UAAW,EACXH,YAAa,sBACbC,IAAKb,EACLc,UAAQ,QAGd,mBAAQH,KAAK,SAAb,SACGf,EAAc,UAAY,cAIlC,C,qJC9DY,SAASoB,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAS5B,OACE,4BACE,SAAC,IAAD,CAAU5B,SARS,SAAAQ,GACrBc,GAASO,EAAAA,EAAAA,IAAgBrB,IAAWsB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC1CC,aAAaC,QAAQ,QAASF,EAAQG,OACtCV,EAAS,YACV,GACF,IAIIE,IAAW,SAAC,IAAD,MAGjB,C","sources":["components/SignForm/SignForm.jsx","pages/SignUp/SignUp.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useRef } from 'react';\n\nexport default function SignForm({ onSubmit, isLoginForm = false}) {\n\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if(isLoginForm) {\n      const formData = {\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value\n      };\n      onSubmit(formData);\n    } else {\n      const formData = {\n        name: nameInputRef.current.value,\n        email: emailInputRef.current.value,\n        password: passwordInputRef.current.value\n      }\n      onSubmit(formData);\n    }\n\n    e.target.reset();\n  };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <h2>{isLoginForm ? 'Sign In' : 'Sign up'}</h2>\n        {isLoginForm ? null :\n        (<label>\n          <span>Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder={'Enter your name'}\n              ref={nameInputRef}\n              required\n            />\n        </label>)}\n        <label>\n          <span>E-mail</span>\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder={'Enter your e-mail'}\n              ref={emailInputRef}\n              required\n            />\n        </label>\n        <label>\n          <span>Password</span>\n            <input\n              type=\"password\"\n              name=\"password\"\n              minLength={7}\n              placeholder={'Enter your password'}\n              ref={passwordInputRef}\n              required\n            />\n        </label>\n        <button type=\"submit\">\n          {isLoginForm ? 'Sign In' : 'Sign up'}\n        </button>\n      </form>\n    );\n  }\n\nSignForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React from \"react\";\nimport SignForm from \"components/SignForm/SignForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerRequest } from '../../redux/userSlice/operations';\nimport { selectIsLoading } from '../../redux/userSlice/selectors'\nimport Loader from \"components/Loader\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function SignUpPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loading = useSelector(selectIsLoading);\n\n\n  const handleRegister = formData => {\n    dispatch(registerRequest(formData)).then(({ payload }) => {\n      localStorage.setItem('token', payload.token)\n      navigate('/contacts');\n    });;\n  }\n  return (\n    <div>\n      <SignForm onSubmit={handleRegister} />\n      {loading && <Loader/>}\n    </div>\n  )\n}"],"names":["SignForm","onSubmit","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","e","preventDefault","formData","email","current","value","password","name","target","reset","type","placeholder","ref","required","minLength","SignUpPage","dispatch","useDispatch","navigate","useNavigate","loading","useSelector","selectIsLoading","registerRequest","then","payload","localStorage","setItem","token"],"sourceRoot":""}